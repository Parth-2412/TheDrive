version: '3.8'

services:
  backend:
    build: ./backend
    volumes:
      - ./backend:/app  # Mount the backend directory
    ports:
      - "8000:8000"  # Expose Django on port 8000
    depends_on:
      - minio
      - postgres  # Add PostgreSQL as a dependency
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - MINIO_ENDPOINT=minio:9000  # MinIO inside the container
      - MINIO_SECURE=False
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres  # Host name of PostgreSQL service
    networks:
      - network

  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_WEB_UI=true   # Enable the web UI on port 9000
    ports:
      - "9000:9000"  # MinIO Web UI on port 9000
      - "9001:9001"  # MinIO Console UI (optional)
    volumes:
      - minio-data:/data  # MinIO persistent storage
    command: minio server --console-address ':9001' /data
    networks:
      - network

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data  # PostgreSQL persistent storage
    ports:
      - "5432:5432"  # PostgreSQL default port
    networks:
      - network

volumes:
  minio-data:
    driver: local
  postgres-data:
    driver: local

networks:
  network:
    driver: bridge
